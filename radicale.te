policy_module(radicale, 1.0.0)

gen_require(`
    type httpd_t;
')



########################################
#
# Declarations
#

type radicale_t;
type radicale_exec_t;
init_daemon_domain(radicale_t, radicale_exec_t)

permissive radicale_t;

type radicale_log_t;
logging_log_file(radicale_log_t)

type radicale_var_lib_t;
files_type(radicale_var_lib_t)

type radicale_etc_t;
files_type(radicale_etc_t);

type radicale_unit_file_t;
systemd_unit_file(radicale_unit_file_t)

########################################
#
# radicale local policy
#
allow radicale_t self:fifo_file rw_fifo_file_perms;
allow radicale_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(radicale_t, radicale_log_t, radicale_log_t)
manage_files_pattern(radicale_t, radicale_log_t, radicale_log_t)
manage_lnk_files_pattern(radicale_t, radicale_log_t, radicale_log_t)
logging_log_filetrans(radicale_t, radicale_log_t, { dir file lnk_file })

manage_dirs_pattern(radicale_t, radicale_var_lib_t, radicale_var_lib_t)
manage_files_pattern(radicale_t, radicale_var_lib_t, radicale_var_lib_t)
manage_lnk_files_pattern(radicale_t, radicale_var_lib_t, radicale_var_lib_t)
files_var_lib_filetrans(radicale_t, radicale_var_lib_t, { dir file lnk_file })

domain_use_interactive_fds(radicale_t)

files_read_etc_files(radicale_t)
read_files_pattern(radicale_t, radicale_etc_t, radicale_etc_t)

bool httpd_can_read_write_radicale false;

if (httpd_can_read_write_radicale) {
    manage_dirs_pattern(httpd_t, radicale_log_t, radicale_log_t)
    manage_files_pattern(httpd_t, radicale_log_t, radicale_log_t)
    manage_lnk_files_pattern(httpd_t, radicale_log_t, radicale_log_t)
    #logging_log_filetrans(httpd_t, radicale_log_t, { dir file lnk_file })

    manage_dirs_pattern(httpd_t, radicale_var_lib_t, radicale_var_lib_t)
    manage_files_pattern(httpd_t, radicale_var_lib_t, radicale_var_lib_t)
    manage_lnk_files_pattern(httpd_t, radicale_var_lib_t, radicale_var_lib_t)
    #files_var_lib_filetrans(httpd_t, radicale_var_lib_t, { dir file lnk_file })

    #domain_use_interactive_fds(httpd_t)

    #files_read_etc_files(radicale_t)
    read_files_pattern(httpd_t, radicale_etc_t, radicale_etc_t)
} 

miscfiles_read_localization(radicale_t)
